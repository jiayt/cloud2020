server:
  port: 8001
spring:
  application:
    name: cloud-payment-service
  zipkin:
    base-url: http://192.168.116.130:9411  #将监控的数据采集到这个zipkin地址
  sleuth:
    sampler:
      #采样率值介于0-1之间，1则代表全部采集
      probability: 1
  datasource:
    # 当前数据源操作类型
    type: com.alibaba.druid.pool.DruidDataSource
#    driver-class-name: com.mysql.jdbc.Driver
#    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db2019?useUnicode=true&characterEncoding=utf8
    username: root
    password: 900251

eureka:
  client:
    #表示是否将自己注册进eurekaServer 默认为true
    register-with-eureka: true
    #是否从eurekaserver抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #defaultZone: http://eureka7001.com:7001/eureka #单机版 配合保护机制开启单机方便测试
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka #集群版

  instance:
    instance-id: payment8001 #eureka页面显示服务名称，不用在显示主机名
    prefer-ip-address: true  #访问路径可以显示ip地址，默认为false不显示

    #以下两个配置是配合服务端关闭自我保护机制
    #lease-renewal-interval-in-seconds: 1 #eureka客户端向服务端发送心跳的时间间隔，单位秒默认是30秒
    #eureka服务端再收到最后一次心跳后等待时间上线，单位为秒（默认90秒），超时将剔除服务
    #lease-expiration-duration-in-seconds: 2


mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.czinwen.springcloud.entities
    #它一般对应我们的实体类所在的包，这个时候会自动取对应包中不包括包名的简单类名作为包括包名的别名。多个package之间可以用逗号或者分号等来进行分隔（value的值一定要是包的全）
